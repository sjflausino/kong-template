name: Kong Stack 

on:
  workflow_dispatch:

jobs:
  kong_stack:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Install Vkpr
        shell: bash
        run: |
          curl -fsSL https://get.vkpr.net/ | CONTROL_SKIP="true" bash

      ### Configure VKPR Credentials
      - name: config vkpr credentials
        shell: bash
        run: |
            shopt -s expand_aliases
            alias vkpr="rit vkpr"
            vkpr credential set --provider="aws" \
                --fields="accesskeyid,region,secretaccesskey" \
                --values="${{ secrets.AWS_ACCESS_KEY }},${{ secrets.AWS_REGION }},${{ secrets.AWS_SECRET_KEY }}" 
            vkpr credential set --provider="postgres" \
                --fields="password,service" \
                --values="${{ secrets.POSTGRES_PASSWORD}},postgres" 
      - name: Kong License
        run: |
          KONG_LICENSE=${{ secrets.KONG_LICENSE }}
          if [ -z "$KONG_LICENSE" ]; then
            touch license 
            echo "$KONG_LICENSE" > license
            yq -i ".kong.enterprise.license = \"$PWD/license\"" $PWD/vkpr.yaml
          fi

      ### Provisionamento (External DNS, Cert-Manager, Nginx Ingress Controller)
      - name: Vkpr apply
        run: |
          shopt -s expand_aliases
          alias vkpr="rit vkpr"
          aws eks update-kubeconfig --name ${{ secrets.CLUSTER_NAME }} --region ${{ secrets.AWS_REGION }}
          vkpr apply --path_to_file="$(pwd)/vkpr.yaml"

      - name: Upload kubeconfig file as artefact
        uses: actions/upload-artifact@v2
        with:
          name: kubeconfig
          path: ~/.kube/config